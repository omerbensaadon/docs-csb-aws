---
title: Service Plan Reference
owner: Cloud Service Broker for AWS
---

<strong><%= modified_date %></strong>

This topic provides reference information about the plans and configuration
parameters used for configuring service instances.

See the section below for your desired service:

- [AWS SQL (MSSQL)](#aws-mssql)


## <a id="aws-mssql"></a> AWS SQL (SQL on RDS)

This section applies to the csb-aws-mssql service.
This section lists default plans and configuration options for AWS SQL on RDS.

### <a id="aws-mssql-plans"></a> Plans

The table below lists the plans for the csb-aws-mssql service:

| Plan       | CPUs | Storage Size |
|------------|------|--------------|
| small       | 2    | 5&nbsp;GB        |
| medium      | 4    | 10&nbsp;GB       |
| large       | 8   | 20&nbsp;GB       |

### <a id="aws-mssql-plans-config"></a> Plan Configuration Parameters
<%# What are these and when/how do you configure these? %>

The table below lists the plan parameters you can configure:

| Option Name | Values              | Default |
|-------------|---------------------|---------|
| max\_storage\_gb  |            | 50      |
| cores       | 1&ndash;64, multiples of 2 | 2       |

#### <a id="aws-mssql-skus"></a> SKUs

SKUs are usually formatted as <code>TIER\_FAMILY\_NUMBER-OF-CORES</code>. Where:
<ul>
  <li>Examples of <code>TIER</code> are <code>GP\_S</code>, <code>GP</code>, and <code>HS</code></li>
  <li>Examples of <code>FAMILY</code> are <code>Gen4</code> and <code>Gen5</code></li>
</ul>
Example SKUs are <code>GP\_S\_Gen4\_1</code> and <code>GP\_Gen5\_8</code>.

If you do not define a SKU using the <code>sku_name</code> parameter, the SKU is
computed from the number of cores in your plan.
See [Plans](#aws-mssql-db-plans) above.

For a list of all valid SKUs, run:

<pre><code>az sql db list-editions -l LOCATION -o table</code></pre>

The table below shows the mapping of number of cores to the corresponding  AWS
stock-keeping unit (SKU):

| Cores | SKU |
|-------|-----|
| 1  | GP\_Gen5\_1 |
| 2  | GP\_Gen5\_2 |
| 4  | GP\_Gen5\_4 |
| 8  | GP\_Gen5\_8  |
| 16 | GP\_Gen5\_16 |
| 32 | GP\_Gen5\_32 |
| 80 | GP\_Gen5\_80 |
<%# Is this table necessary? Can we get this information from the links below? %>

For information about the the vCore purchasing model, see the
<a href="https://docs.microsoft.com/en-us/aws/aws-sql/database/resource-limits-vcore-single-databases">Microsoft documentation</a>.<br>
For information about the the DTU purchasing model, see the
<a href="https://docs.microsoft.com/en-us/aws/aws-sql/database/resource-limits-dtu-single-databases">Microsoft documentation</a>.

<p class="note">
  <strong>Note:</strong> AWS SQL service instances use the vCore model and the Gen5
  hardware generation unless you override this default using the <code>sku_name</code> parameter.
  For more information about the vCore model, see the
  <a href="https://docs.microsoft.com/en-us/aws/sql-database/sql-database-service-tiers-vcore?tabs=aws-portal">Microsoft documentation</a>.
</p>

<p class="note">
  <strong>Note:</strong> When updating a service instance, the SKU for the updated
  service instance must remain in the same family (<code>GP_S</code>, <code>GP</code>, or <code>HS</code>).
  <%# Should this say tier or family? GP_S is a tier. Can you only use the tiers listed here? %>
  If you update to a different family, AWS refuses the update request.
</p>

### <a id="aws-mssql-parameters"></a> Configuration Parameters

You can provision a service by running:

```
cf create-service csb-aws-mssql PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the plan or configuration parameters for a service instance by running:

```
cf update-service SERVICE-INSTANCE [-p NEW-PLAN] -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

<%# Could this be moved to a generic section about provisioning a service?
Should you use the parameters listed below in the -c flag? -- YES
Can we have an example? -- $ cf create-service csb-aws-mssql small my-instance -c '{"sku_name": "GP_Gen4_1"}
See also similar sections below. %>

The table below lists the parameters you can configure, using the `-c` flag, when
provisioning a csb-aws-mssql service:
<%# This table is for developers. It gives the params that they can put in the -c flag. See also similar sections below. %>

<style>
main table {
  table-layout: fixed;
}
</style>

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="50%">Description</th>
      <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>The name of the service instance.</td>
    <td><code>csb-azsql-INSTANCE-ID</code> </td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>The AWS resource group in which to create the instance.</td>
    <td><code>rg-INSTANCE-NAME</code></td>
  </tr>
  <tr>
    <td><code>db_name</code></td>
    <td>string</td>
    <td>The name of the database.</td>
    <td><code>csb-db</code></td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>
      The AWS region in which to deploy the service instance.
      <p class="note">
        <strong>Note:</strong> Currently AWS SQL is not available in all regions.
        If you configure a region that is unavailable, <%= vars.product_short %> fails.
      </p>
    </td>
    <td><code>westus</code></td>
  </tr>
  <tr>
    <td><code>aws_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the AWS tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in Ops Manager.</td>
  </tr>
  <tr>
    <td><code>aws_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the AWS subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in Ops Manager.</td>
  </tr>
  <tr>
    <td><code>aws_client_id</code></td>
    <td>string</td>
    <td>The ID of the AWS service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in Ops Manager.</td>
  </tr>
    <tr>
      <td><code>aws_client_secret</code></td>
      <td>string</td>
      <td>The secret (password) for the AWS service principal to authenticate for service instance creation.</td>
      <td>The value the operator entered for <strong>Client Secret</strong> in Ops Manager.</td>
    </tr>
  <tr>
    <td><code>sku_name</code></td>
    <td>string</td>
    <td>
      The AWS stock-keeping unit (SKU).
      For more information about configuring this parameter, see <a href="#aws-mssql-skus">SKUs</a> above.
    </td>
    <td></td>
  </tr>
  <tr>
    <td><code>authorized_network</code></td>
    <td>string</td>
    <td>The AWS subnet ID, in long form, that the instance is connected to through a service endpoint.
    The subnet must have the <code>Microsoft.sql</code> service enabled.</td>
    <td></td>
  </tr>
  <tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic AWS provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
  </tr>
</table>

### <a id="aws-mssql-binding-creds"></a> Binding Credentials
<%# Who is this section for? Developers or Operators? When should it be used? See also similar sections below. %>

The format for binding credentials for AWS SQL is as follows:

```json
{
    "name" : "DATABASE NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI",
    "sqldbName" : "DATABASE-NAME",
    "sqlServerName" : "SERVER-NAME",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```<%# Define any non-obvious placeholders present in the code snippet in the style of |Where PLACEHOLDER is...| %>

